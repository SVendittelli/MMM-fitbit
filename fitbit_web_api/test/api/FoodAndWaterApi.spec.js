/**
 * Fitbit Web API Explorer
 * Fitbit provides a Web API for accessing data from Fitbit activity trackers, Aria scale, and manually entered logs. Anyone can develop an application to access and modify a Fitbit user's data on their behalf, so long as it complies with Fitbit Platform Terms of Service. These Swagger UI docs do not currently support making Fitbit API requests directly. In order to make a request, construct a request for the appropriate endpoint using this documentation, and then add an Authorization header to each request with an access token obtained using the steps outlined here: https://dev.fitbit.com/build/reference/web-api/developer-guide/authorization/.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FitbitWebApiExplorer);
  }
}(this, function(expect, FitbitWebApiExplorer) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FitbitWebApiExplorer.FoodAndWaterApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FoodAndWaterApi', function() {
    describe('addFavoriteFood', function() {
      it('should call addFavoriteFood successfully', function(done) {
        //uncomment below and update the code to test addFavoriteFood
        //instance.addFavoriteFood(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addFoods', function() {
      it('should call addFoods successfully', function(done) {
        //uncomment below and update the code to test addFoods
        //instance.addFoods(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addFoodsLog', function() {
      it('should call addFoodsLog successfully', function(done) {
        //uncomment below and update the code to test addFoodsLog
        //instance.addFoodsLog(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addMeal', function() {
      it('should call addMeal successfully', function(done) {
        //uncomment below and update the code to test addMeal
        //instance.addMeal(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addUpdateFoodsGoal', function() {
      it('should call addUpdateFoodsGoal successfully', function(done) {
        //uncomment below and update the code to test addUpdateFoodsGoal
        //instance.addUpdateFoodsGoal(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addUpdateWaterGoal', function() {
      it('should call addUpdateWaterGoal successfully', function(done) {
        //uncomment below and update the code to test addUpdateWaterGoal
        //instance.addUpdateWaterGoal(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addWaterLog', function() {
      it('should call addWaterLog successfully', function(done) {
        //uncomment below and update the code to test addWaterLog
        //instance.addWaterLog(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFavoriteFood', function() {
      it('should call deleteFavoriteFood successfully', function(done) {
        //uncomment below and update the code to test deleteFavoriteFood
        //instance.deleteFavoriteFood(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFoods', function() {
      it('should call deleteFoods successfully', function(done) {
        //uncomment below and update the code to test deleteFoods
        //instance.deleteFoods(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFoodsLog', function() {
      it('should call deleteFoodsLog successfully', function(done) {
        //uncomment below and update the code to test deleteFoodsLog
        //instance.deleteFoodsLog(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteMeal', function() {
      it('should call deleteMeal successfully', function(done) {
        //uncomment below and update the code to test deleteMeal
        //instance.deleteMeal(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteWaterLog', function() {
      it('should call deleteWaterLog successfully', function(done) {
        //uncomment below and update the code to test deleteWaterLog
        //instance.deleteWaterLog(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editFoodsLog', function() {
      it('should call editFoodsLog successfully', function(done) {
        //uncomment below and update the code to test editFoodsLog
        //instance.editFoodsLog(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFavoriteFoods', function() {
      it('should call getFavoriteFoods successfully', function(done) {
        //uncomment below and update the code to test getFavoriteFoods
        //instance.getFavoriteFoods(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFoodsByDate', function() {
      it('should call getFoodsByDate successfully', function(done) {
        //uncomment below and update the code to test getFoodsByDate
        //instance.getFoodsByDate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFoodsGoal', function() {
      it('should call getFoodsGoal successfully', function(done) {
        //uncomment below and update the code to test getFoodsGoal
        //instance.getFoodsGoal(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFoodsInfo', function() {
      it('should call getFoodsInfo successfully', function(done) {
        //uncomment below and update the code to test getFoodsInfo
        //instance.getFoodsInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFoodsList', function() {
      it('should call getFoodsList successfully', function(done) {
        //uncomment below and update the code to test getFoodsList
        //instance.getFoodsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFoodsLocales', function() {
      it('should call getFoodsLocales successfully', function(done) {
        //uncomment below and update the code to test getFoodsLocales
        //instance.getFoodsLocales(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFoodsUnits', function() {
      it('should call getFoodsUnits successfully', function(done) {
        //uncomment below and update the code to test getFoodsUnits
        //instance.getFoodsUnits(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFrequentFoods', function() {
      it('should call getFrequentFoods successfully', function(done) {
        //uncomment below and update the code to test getFrequentFoods
        //instance.getFrequentFoods(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMeals', function() {
      it('should call getMeals successfully', function(done) {
        //uncomment below and update the code to test getMeals
        //instance.getMeals(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRecentFoods', function() {
      it('should call getRecentFoods successfully', function(done) {
        //uncomment below and update the code to test getRecentFoods
        //instance.getRecentFoods(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWaterByDate', function() {
      it('should call getWaterByDate successfully', function(done) {
        //uncomment below and update the code to test getWaterByDate
        //instance.getWaterByDate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWaterGoal', function() {
      it('should call getWaterGoal successfully', function(done) {
        //uncomment below and update the code to test getWaterGoal
        //instance.getWaterGoal(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateMeal', function() {
      it('should call updateMeal successfully', function(done) {
        //uncomment below and update the code to test updateMeal
        //instance.updateMeal(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateWaterLog', function() {
      it('should call updateWaterLog successfully', function(done) {
        //uncomment below and update the code to test updateWaterLog
        //instance.updateWaterLog(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
