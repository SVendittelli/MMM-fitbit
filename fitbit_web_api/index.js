/**
 * Fitbit Web API Explorer
 * Fitbit provides a Web API for accessing data from Fitbit activity trackers, Aria scale, and manually entered logs. Anyone can develop an application to access and modify a Fitbit user's data on their behalf, so long as it complies with Fitbit Platform Terms of Service. These Swagger UI docs do not currently support making Fitbit API requests directly. In order to make a request, construct a request for the appropriate endpoint using this documentation, and then add an Authorization header to each request with an access token obtained using the steps outlined here: https://dev.fitbit.com/build/reference/web-api/developer-guide/authorization/.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ActiveZoneMinutesIntradayTimeSeriesApi from './api/ActiveZoneMinutesIntradayTimeSeriesApi';
import ActiveZoneMinutesTimeSeriesApi from './api/ActiveZoneMinutesTimeSeriesApi';
import ActivityApi from './api/ActivityApi';
import ActivityIntradayTimeSeriesApi from './api/ActivityIntradayTimeSeriesApi';
import ActivityTimeSeriesApi from './api/ActivityTimeSeriesApi';
import AuthApi from './api/AuthApi';
import BodyAndWeightApi from './api/BodyAndWeightApi';
import BodyAndWeightTimeSeriesApi from './api/BodyAndWeightTimeSeriesApi';
import BreathingRateApi from './api/BreathingRateApi';
import BreathingRateIntradayApi from './api/BreathingRateIntradayApi';
import CardioFitnessScoreVO2MaxApi from './api/CardioFitnessScoreVO2MaxApi';
import DevicesApi from './api/DevicesApi';
import ElectrocardiogramApi from './api/ElectrocardiogramApi';
import FoodAndWaterApi from './api/FoodAndWaterApi';
import FoodAndWaterTimeSeriesApi from './api/FoodAndWaterTimeSeriesApi';
import FriendsApi from './api/FriendsApi';
import HeartRateIntradayTimeSeriesApi from './api/HeartRateIntradayTimeSeriesApi';
import HeartRateTimeSeriesApi from './api/HeartRateTimeSeriesApi';
import HeartRateVariabilityApi from './api/HeartRateVariabilityApi';
import HeartRateVariabilityIntradayApi from './api/HeartRateVariabilityIntradayApi';
import SleepApi from './api/SleepApi';
import SpO2Api from './api/SpO2Api';
import SpO2IntradayApi from './api/SpO2IntradayApi';
import SubscriptionsApi from './api/SubscriptionsApi';
import TemperatureApi from './api/TemperatureApi';
import UserApi from './api/UserApi';


/**
* Fitbit provides a Web API for accessing data from Fitbit activity trackers, Aria scale, and manually entered logs. Anyone can develop an application to access and modify a Fitbit user&#39;s data on their behalf, so long as it complies with Fitbit Platform Terms of Service. These Swagger UI docs do not currently support making Fitbit API requests directly. In order to make a request, construct a request for the appropriate endpoint using this documentation, and then add an Authorization header to each request with an access token obtained using the steps outlined here: https://dev.fitbit.com/build/reference/web-api/developer-guide/authorization/..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var FitbitWebApiExplorer = require('index'); // See note below*.
* var xxxSvc = new FitbitWebApiExplorer.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new FitbitWebApiExplorer.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new FitbitWebApiExplorer.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new FitbitWebApiExplorer.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
    * The ActiveZoneMinutesIntradayTimeSeriesApi service constructor.
    * @property {module:api/ActiveZoneMinutesIntradayTimeSeriesApi}
    */
    ActiveZoneMinutesIntradayTimeSeriesApi,

    /**
    * The ActiveZoneMinutesTimeSeriesApi service constructor.
    * @property {module:api/ActiveZoneMinutesTimeSeriesApi}
    */
    ActiveZoneMinutesTimeSeriesApi,

    /**
    * The ActivityApi service constructor.
    * @property {module:api/ActivityApi}
    */
    ActivityApi,

    /**
    * The ActivityIntradayTimeSeriesApi service constructor.
    * @property {module:api/ActivityIntradayTimeSeriesApi}
    */
    ActivityIntradayTimeSeriesApi,

    /**
    * The ActivityTimeSeriesApi service constructor.
    * @property {module:api/ActivityTimeSeriesApi}
    */
    ActivityTimeSeriesApi,

    /**
    * The AuthApi service constructor.
    * @property {module:api/AuthApi}
    */
    AuthApi,

    /**
    * The BodyAndWeightApi service constructor.
    * @property {module:api/BodyAndWeightApi}
    */
    BodyAndWeightApi,

    /**
    * The BodyAndWeightTimeSeriesApi service constructor.
    * @property {module:api/BodyAndWeightTimeSeriesApi}
    */
    BodyAndWeightTimeSeriesApi,

    /**
    * The BreathingRateApi service constructor.
    * @property {module:api/BreathingRateApi}
    */
    BreathingRateApi,

    /**
    * The BreathingRateIntradayApi service constructor.
    * @property {module:api/BreathingRateIntradayApi}
    */
    BreathingRateIntradayApi,

    /**
    * The CardioFitnessScoreVO2MaxApi service constructor.
    * @property {module:api/CardioFitnessScoreVO2MaxApi}
    */
    CardioFitnessScoreVO2MaxApi,

    /**
    * The DevicesApi service constructor.
    * @property {module:api/DevicesApi}
    */
    DevicesApi,

    /**
    * The ElectrocardiogramApi service constructor.
    * @property {module:api/ElectrocardiogramApi}
    */
    ElectrocardiogramApi,

    /**
    * The FoodAndWaterApi service constructor.
    * @property {module:api/FoodAndWaterApi}
    */
    FoodAndWaterApi,

    /**
    * The FoodAndWaterTimeSeriesApi service constructor.
    * @property {module:api/FoodAndWaterTimeSeriesApi}
    */
    FoodAndWaterTimeSeriesApi,

    /**
    * The FriendsApi service constructor.
    * @property {module:api/FriendsApi}
    */
    FriendsApi,

    /**
    * The HeartRateIntradayTimeSeriesApi service constructor.
    * @property {module:api/HeartRateIntradayTimeSeriesApi}
    */
    HeartRateIntradayTimeSeriesApi,

    /**
    * The HeartRateTimeSeriesApi service constructor.
    * @property {module:api/HeartRateTimeSeriesApi}
    */
    HeartRateTimeSeriesApi,

    /**
    * The HeartRateVariabilityApi service constructor.
    * @property {module:api/HeartRateVariabilityApi}
    */
    HeartRateVariabilityApi,

    /**
    * The HeartRateVariabilityIntradayApi service constructor.
    * @property {module:api/HeartRateVariabilityIntradayApi}
    */
    HeartRateVariabilityIntradayApi,

    /**
    * The SleepApi service constructor.
    * @property {module:api/SleepApi}
    */
    SleepApi,

    /**
    * The SpO2Api service constructor.
    * @property {module:api/SpO2Api}
    */
    SpO2Api,

    /**
    * The SpO2IntradayApi service constructor.
    * @property {module:api/SpO2IntradayApi}
    */
    SpO2IntradayApi,

    /**
    * The SubscriptionsApi service constructor.
    * @property {module:api/SubscriptionsApi}
    */
    SubscriptionsApi,

    /**
    * The TemperatureApi service constructor.
    * @property {module:api/TemperatureApi}
    */
    TemperatureApi,

    /**
    * The UserApi service constructor.
    * @property {module:api/UserApi}
    */
    UserApi
};
